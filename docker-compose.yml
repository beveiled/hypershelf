services:
  backend:
    image: ghcr.io/get-convex/convex-backend:latest
    stop_grace_period: 10s
    stop_signal: SIGINT
    volumes:
      - data:/convex/data
    healthcheck:
      test: curl -f http://localhost:3210/version || exit 1
      interval: 5s
      start_period: 10s
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - INSTANCE_NAME=${INSTANCE_NAME:-hypershelf}
      - INSTANCE_SECRET=${INSTANCE_SECRET}
      - DISABLE_BEACON=true
      - DO_NOT_REQUIRE_SSL=true
      - CONVEX_CLOUD_ORIGIN=${PUBLIC_CONVEX_BACKEND_URL:-http://localhost:3210}
      - CONVEX_SITE_ORIGIN=${PUBLIC_CONVEX_SITE_URL:-http://localhost:3211}
      - DATABASE_URL=postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD}@localhost:5432
      - RUST_LOG=info
    network_mode: host

  dashboard:
    image: ghcr.io/get-convex/convex-dashboard:latest
    stop_grace_period: 10s
    stop_signal: SIGINT
    depends_on:
      backend:
        condition: service_healthy
    environment:
      PUBLIC_CONVEX_BACKEND_URL: "${PUBLIC_CONVEX_BACKEND_URL:-http://localhost:3210}"
    network_mode: host

  frontend:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        NEXT_PUBLIC_CONVEX_URL: ${PUBLIC_CONVEX_BACKEND_URL:-http://localhost:3210}
        NEXT_PUBLIC_CONVEX_SITE_URL: ${PUBLIC_CONVEX_SITE_URL:-http://localhost:3211}
        NEXT_PUBLIC_SITE_URL: ${PUBLIC_FRONTEND_URL:-http://localhost:3999}
        VSPHERE_HOSTNAME: ${VSPHERE_HOSTNAME}
        NEXT_PUBLIC_VERSION: ${NEXT_PUBLIC_VERSION}
        NEXT_PUBLIC_VERSION_MOD: ${NEXT_PUBLIC_VERSION_MOD:-}
    stop_grace_period: 10s
    stop_signal: SIGINT
    depends_on:
      backend:
        condition: service_healthy
    environment:
      NEXT_PUBLIC_CONVEX_URL: ${PUBLIC_CONVEX_BACKEND_URL:-http://localhost:3210}
      NEXT_PUBLIC_CONVEX_SITE_URL: ${PUBLIC_CONVEX_SITE_URL:-http://localhost:3211}
      NEXT_PUBLIC_SITE_URL: ${PUBLIC_FRONTEND_URL:-http://localhost:3999}
      INVITE_CODE: ${INVITE_CODE}
      NEXT_PUBLIC_VERSION: ${NEXT_PUBLIC_VERSION}
      NEXT_PUBLIC_VERSION_MOD: ${NEXT_PUBLIC_VERSION_MOD:-}
    network_mode: host

  postgres:
    image: postgres:latest
    volumes:
      - pg_data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${INSTANCE_NAME:-hypershelf}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      start_period: 10s
    network_mode: host

  redis:
    image: redis:latest
    command:
      [
        "redis-server",
        "--save",
        "60",
        "1",
        "--loglevel",
        "warning",
        "--requirepass",
        "${REDIS_PASSWORD}",
      ]
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD-SHELL", "redis-cli -a ${REDIS_PASSWORD} ping | grep PONG"]
      interval: 5s
      start_period: 10s
    network_mode: host

volumes:
  data:
  pg_data:
  redis_data:
